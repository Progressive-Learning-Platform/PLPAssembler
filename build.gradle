plugins {
    id 'java-library'
    id 'jacoco'
    id 'checkstyle'
}

group 'org.plp'
version '1.0-SNAPSHOT'


repositories {
    mavenCentral()
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.16'
    annotationProcessor 'org.projectlombok:lombok:1.18.16'

    compile 'com.fasterxml.jackson.core:jackson-core:2.12.2'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.12.2'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.12.2'

    testCompileOnly 'org.projectlombok:lombok:1.18.16'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.16'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'
    testImplementation 'org.mockito:mockito-junit-jupiter:3.5.10'
    testImplementation 'org.hamcrest:hamcrest:2.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.6.2'
}

test {
    finalizedBy jacocoTestReport
    useJUnitPlatform()
    systemProperty 'junit.jupiter.conditions.deactivate', '*'
    systemProperties = [
            'junit.jupiter.extensions.autodetection.enabled': 'true',
            'junit.jupiter.testinstance.lifecycle.default': 'per_class'
    ]
}

java {
    withJavadocJar()
    withSourcesJar()
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.enabled true
        csv.enabled true
    }
}

jacoco {
    toolVersion = "0.8.5"
    reportsDir = file("$buildDir/reports/jacoco")
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.90
            }
        }
        rule {
            limit {
                counter = 'BRANCH'
                minimum = 0.90
            }
        }
    }
}

check.dependsOn jacocoTestCoverageVerification

checkstyle {
    toolVersion '8.36.2'
    configFile file("${rootDir}/config/checkstyle/PLP_checkstyle.xml")
    checkstyleTest.enabled = false
}
checkstyleMain {
    source='src/main/java'
}
checkstyleTest {
    source='src/test/java'
}